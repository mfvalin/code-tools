#!/bin/ksh

if [ "$1" = "-lang" ]
then
  BIDON=$2
  shift ; shift ;
else
  BIDON=fortran
fi

if [[ ${BIDON} = pure_fortran* ]]
then
  cat << EOF1
      program custom
      call ${1:-unknown_program}
      stop
      end
EOF1
  return
fi
cat << EOF1

/* generated by s.makebidon */
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
#include <rmnlib.h>
EOF1
if [[ ${BIDON} = fortran* ]]
then
  for i in $*
  do
    echo "extern void f77name(${i}) (); "
  done
elif [[ ${BIDON} = c* ]]
then
    echo "extern void f77name(fmain2cmain)(); "
  for i in $*
  do
    echo "extern void ${i} (); "
  done
fi
cat <<EOF2

ftnword f77name(c_to_f_sw)(char *program, int *f_lng)
{
  int ier;
  int lng = *f_lng;
  char *n_program;
  n_program=malloc(lng);
  strncpy(n_program,program,lng); 
  if ( (n_program == "null" || n_program == " " || lng == 0) && ( 1 != $# ) ){
    fprintf(stdout,"erreur 1: aucun argument specifie\n");
    exit(1);
  }
  else if ( n_program == "-h" ){
    fprintf(stdout,"programmes reconnus: $* \n");
  }

EOF2
if [[ $# = 1 ]]
then
    echo "  else if ( 0 == 0 ){"
    if [[ ${BIDON} = c* ]]
    then
        echo "    f77name(fmain2cmain)($1) ;"
    elif [[ ${BIDON} = fortran* ]]
    then
        echo "    f77name($1) () ;"
    fi
    echo "  }"
else
  for i in $*
  do
    echo "  else if ( strncmp(n_program,\"-$i\",lng) == 0 ){"
    if [[ ${BIDON} = c* ]]
    then
	echo "    f77name(fmain2cmain)(${i}) ;"
    elif [[ ${BIDON} = fortran* ]]
    then
	echo "    f77name(${i}) () ;"    
    fi
    echo "  }"
  done

fi

cat <<EOF3
  else{
    fprintf(stdout,"%s : erreur 2: pas dans la liste des programmes connus\n",n_program);
    fprintf(stdout,"Programmes reconnus: $*\n");
    exit(2);
  }
  ier=0;
  free(n_program);
  return((ftnword) ier);
}

EOF3
